name: ci cd for develop-cicd

on:
  push:
    branches:
      - develop-cicd
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: build và test
  # Job thực thi trên máy ảo ubuntu
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        # Sử dụng action "checkout" để sao copy code từ repository vào máy ảo Ubuntu
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        # Sử dụng action "docker/login-action" để đăng nhập vào Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
      -
        name: Build and test
        # Build và test image được build ra bằng Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          target: test
          load: true
      -
        name: Build and push
        # Sử dụng action "docker/build-push-action" để đẩy image lên Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: production
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  # Job 2: Deploy
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        # Sử dụng action "appleboy/ssh-action" để triển khai image lên server thông qua SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ variables.HOST_TO_LOCAL }}
          username: ${{ variables.USERNAME_SV_LOCAL }}
          key: ${{ secrets.SSH_PRIVATE_KEY_SV_LOCAL }}
          port: 2122
          script: |
            whoami
            ls -al
            # Pull image mà được push lên DockerHub bên trên
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

            #Dừng và gỡ bỏ container hiện tại (nếu có)
            docker stop spring-container
            docker rm spring-container 

            #Chạy container mới với image đã pull về bên trên
            docker run -d -p 8086:8086 --name spring-container ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
