name: CD BE Develop

on:
  push:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  SSH_PASSWORD:  #${{ secrets.SSH_PASSWORD }}
  SERVER_USERNAME:  #${{ secrets.SERVER_USERNAME }}
  SERVER_HOST:  #${{ secrets.SERVER_HOST }}
  GOOGLE_CHAT_WEBHOOK:  https://chat.googleapis.com/v1/spaces/AAAAlitESuE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=8oIfd8f3dPa7ebfUdmrqV1q38yUHNTkNAGYNa531wDk #${{ secrets.GOOGLE_CHAT_WEBHOOK }}
  TELEGRAM_TOKEN: 7411800956:AAGFm7-rWyzeyQllQddl8-4ocCltEbg014Y #${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: -1002197867374 #${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Restore Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

#      - name: Build with Maven
#        run: mvn clean install -DskipTests

#      - name: Copy JAR file to on remote server
#        run: |
#          sshpass -p "${{ env.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no /home/runner/work/world-burger-be/world-burger-be/target/*.jar ${{ env.SERVER_USERNAME }}@${{ env.SERVER_HOST }}:/root/burger/deployment/

#      - name: Google Chat Notification
#        uses: Co-qn/google-chat-notification@releases/v1
#        with:
#          name: |
#            ${{ github.workflow }} - Committer: ${{ github.actor }}
#            CM: ${{ github.event.head_commit.message }}
#          url: ${{ env.GOOGLE_CHAT_WEBHOOK }}
#          status: ${{ job.status }}
#        if: failure()

      - name: Send message to Telegram
        uses: Lukasss93/telegram-action@v2
        env:
          TELEGRAM_TOKEN: ${{ env.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT: ${{ env.TELEGRAM_CHAT_ID }}

      - name: Telegram Notification
        run: |
          curl -s -X POST https://api.telegram.org/bot${{env.TELEGRAM_TOKEN}}/sendMessage -d chat_id=${{env.TELEGRAM_CHAT_ID}} -d text=":rocket: *Action triggered!*
            \nEvent: \`${{ github.event_name }}\`
            \nRepo: \`${{ github.repository }}\`
            \nUser: \`${{ github.actor }}\`
            \nBranch: \`${{ github.ref }}\`" -d parse_mode=Markdown
        if: failure()

  deployment:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

#      - name: Google Chat Notification Action
#        uses: SimonScholz/google-chat-action@v1.1.0
#        if: success()
#        with:
#          webhookUrl: '${{ env.GOOGLE_CHAT_WEBHOOK }}'
#          title: ${{ github.workflow }} - Restarting
#          createDefaultSection: false
#          collapsibleDefaultSection: false
#          uncollapsibleWidgetsCount: 3
#          threadKey: ${{ github.event.number }}

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.TELEGRAM_CHAT_ID }}
          token: ${{ env.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
        if: success()

      - name: Telegram Notification
        run: |
          curl -s -X POST https://api.telegram.org/bot${{env.TELEGRAM_TOKEN}}/sendMessage -d chat_id=${{env.TELEGRAM_CHAT_ID}} -d text=":rocket: *Restarting!*
            \nEvent: \`${{ github.event_name }}\`
            \nRepo: \`${{ github.repository }}\`
            \nUser: \`${{ github.actor }}\`
            \nBranch: \`${{ github.ref }}\`" -d parse_mode=Markdown
        if: success()


#      - name: Execute SSH commands on remote server
#        run: |
#          sshpass -p "${{env.SSH_PASSWORD}}" \
#          ssh -o StrictHostKeyChecking=no ${{env.SERVER_USERNAME}}@${{ env.SERVER_HOST }} '
#          cp /root/burger/deployment/world-burger-be-0.0.1.jar /root/burger/world-burger-be-0.0.1.jar
#          cd /root/burger/
#          sh restart.sh && bash /root/burger/health-check.sh'

#      - name: Google Chat Notification
#        uses: Co-qn/google-chat-notification@releases/v1
#        with:
#          name: |
#            ${{ github.workflow }} - Committer: ${{ github.actor }}
#            CM: ${{ github.event.head_commit.message }}
#          url: ${{ env.GOOGLE_CHAT_WEBHOOK }}
#          status: ${{ job.status }}
#        if: always()

      - name: Telegram Notification
        run: |
          curl -s -X POST https://api.telegram.org/bot${{env.TELEGRAM_TOKEN}}/sendMessage -d chat_id=${{env.TELEGRAM_CHAT_ID}} -d text=":rocket: *Action triggered!*
            \nEvent: \`${{ github.event_name }}\`
            \nRepo: \`${{ github.repository }}\`
            \nUser: \`${{ github.actor }}\`
            \nBranch: \`${{ github.ref }}\`" -d parse_mode=Markdown
        if: always()
